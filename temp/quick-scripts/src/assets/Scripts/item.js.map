{"version":3,"sources":["assets/Scripts/item.js"],"names":["cc","Class","Component","properties","title","onLoad","dependencies","executed","init","wait","store","push","run","stepTime","dep","console","log","node","active","sleep","ms","Promise","resolve","setTimeout"],"mappings":";;;;;;+CACA;;;;;;;;;;;;AADA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAA,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACRC,KAAK,EAAE;EADC,CAHP;EAOLC,MAAM,EAAE,kBAAY;IAChB,KAAKC,YAAL,GAAoB,EAApB;IACA,KAAKC,QAAL,GAAgB,KAAhB;EACH,CAVI;EAYLC,IAAI,EAAE,cAAUJ,KAAV,EAAiB;IACnB,KAAKA,KAAL,GAAaA,KAAb;IACA,KAAKG,QAAL,GAAgB,KAAhB;IACA,KAAKD,YAAL,GAAoB,EAApB;EACH,CAhBI;EAkBLG,IAAI,EAAE,cAAUC,KAAV,EAAiB;IACnB,KAAKJ,YAAL,CAAkBK,IAAlB,CAAuBD,KAAvB;EACH,CApBI;EAsBLE,GAAG;IAAA,sEAAE,iBAAgBC,QAAhB;MAAA;;MAAA;QAAA;UAAA;YAAA;cAAA,4CACiB,KAAKP,YADtB;;YAAA;cAAA;gBAAA;gBAAA;cAAA;;cACUQ,GADV;cAAA;cAAA,OAESA,GAAG,CAACF,GAAJ,CAAQC,QAAR,CAFT;;YAAA;cAAA;cAAA;;YAAA;cAAA,KAKG,KAAKN,QALR;gBAAA;gBAAA;cAAA;;cAAA;;YAAA;cAOD,KAAKA,QAAL,GAAgB,IAAhB;cACAQ,OAAO,CAACC,GAAR,CAAY,KAAKZ,KAAjB;cACA,KAAKa,IAAL,CAAUC,MAAV,GAAmB,KAAnB;cATC;cAAA,OAUK,KAAKC,KAAL,CAAWN,QAAQ,GAAG,IAAtB,CAVL;;YAAA;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA,CAAF;;IAAA;MAAA;IAAA;;IAAA;EAAA,GAtBE;EAmCLM,KAAK,EAAE,eAAUC,EAAV,EAAc;IACjB,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD;MAAA,OAAaC,UAAU,CAACD,OAAD,EAAUF,EAAV,CAAvB;IAAA,CAAZ,CAAP;EACH;AArCI,CAAT","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\n// item.js\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        title: \"\",\n    },\n\n    onLoad: function () {\n        this.dependencies = [];\n        this.executed = false;\n    },\n\n    init: function (title) {\n        this.title = title;\n        this.executed = false;\n        this.dependencies = [];\n    },\n\n    wait: function (store) {\n        this.dependencies.push(store);\n    },\n\n    run: async function (stepTime) {\n        for (const dep of this.dependencies) {\n            await dep.run(stepTime);\n        }\n\n        if (this.executed) return;\n\n        this.executed = true;\n        console.log(this.title);\n        this.node.active = false;\n        await this.sleep(stepTime * 1000);\n    },\n\n    sleep: function (ms) {\n        return new Promise((resolve) => setTimeout(resolve, ms));\n    },\n});\n"]}