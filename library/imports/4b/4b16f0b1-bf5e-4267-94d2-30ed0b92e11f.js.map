{"version":3,"sources":["assets/Bai_3/Scripts/Bai_3.js"],"names":["imageApis","cc","Class","Component","properties","imageScollViewContent","Node","onLoad","removeAllChildren","getImages","index","length","scheduleOnce","fetchImageApi","url","fetch","response","blob","createImageFromBlob","img","texture","Texture2D","initWithElement","handleLoadedTexture","spriteFrame","SpriteFrame","spriteNode","sprite","addComponent","Sprite","width","height","addChild","log","error","Promise","resolve","reject","Image","src","URL","createObjectURL","onload","onerror"],"mappings":";;;;;;+CACA;;;;;;AADA,IAAIA,SAAS,GAAG,CACZ,kGADY,EAEZ,kGAFY,EAGZ,kGAHY,EAIZ,kGAJY,CAAhB;AAOAC,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACRC,qBAAqB,EAAEJ,EAAE,CAACK;EADlB,CAHP;EAOLC,MAPK,oBAOK;IACN;IAEA;IACA,KAAKF,qBAAL,CAA2BG,iBAA3B,GAJM,CAKN;;IAEA,KAAKC,SAAL,CAAe,CAAf;EACH,CAfI;EAiBLA,SAjBK,qBAiBKC,KAjBL,EAiBY;IAAA;;IACb,IAAIA,KAAK,IAAIV,SAAS,CAACW,MAAvB,EAA+B;IAC/B,KAAKC,YAAL,CAAkB,YAAM;MACpB,KAAI,CAACC,aAAL,CAAmBb,SAAS,CAACU,KAAD,CAA5B;;MACAA,KAAK;;MACL,KAAI,CAACD,SAAL,CAAeC,KAAf;IACH,CAJD,EAIG,CAJH;EAMH,CAzBI;EA2BCG,aA3BD,yBA2BeC,GA3Bf,EA2BoB;IAAA;;IAAA;MAAA;MAAA;QAAA;UAAA;YAAA;cAAA;cAAA;cAAA,OAEMC,KAAK,CAACD,GAAD,CAFX;;YAAA;cAEXE,QAFW;cAAA;cAAA,OAGEA,QAAQ,CAACC,IAAT,EAHF;;YAAA;cAGXA,IAHW;cAAA;cAAA,OAIC,MAAI,CAACC,mBAAL,CAAyBD,IAAzB,CAJD;;YAAA;cAIXE,GAJW;cAMXC,OANW,GAMD,IAAInB,EAAE,CAACoB,SAAP,EANC;cAOjBD,OAAO,CAACE,eAAR,CAAwBH,GAAxB;cACAC,OAAO,CAACG,mBAAR;cACMC,WATW,GASG,IAAIvB,EAAE,CAACwB,WAAP,CAAmBL,OAAnB,CATH;cAWbM,UAXa,GAWA,IAAIzB,EAAE,CAACK,IAAP,CAAY,WAAZ,CAXA;cAYbqB,MAZa,GAYJD,UAAU,CAACE,YAAX,CAAwB3B,EAAE,CAAC4B,MAA3B,CAZI;cAajBF,MAAM,CAACH,WAAP,GAAqBA,WAArB;cAEAE,UAAU,CAACI,KAAX,GAAmB,EAAnB;cACAJ,UAAU,CAACK,MAAX,GAAoB,EAApB;;cAEA,MAAI,CAAC1B,qBAAL,CAA2B2B,QAA3B,CAAoCN,UAApC;;cAEAzB,EAAE,CAACgC,GAAH,CAAO,4BAAP;cApBiB;cAAA;;YAAA;cAAA;cAAA;cAsBjBhC,EAAE,CAACiC,KAAH,CAAS,kBAAT;;YAtBiB;YAAA;cAAA;UAAA;QAAA;MAAA;IAAA;EAwBxB,CAnDI;EAqDLhB,mBArDK,+BAqDeD,IArDf,EAqDqB;IACtB,OAAO,IAAIkB,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;MACpC,IAAMlB,GAAG,GAAG,IAAImB,KAAJ,EAAZ;MACAnB,GAAG,CAACoB,GAAJ,GAAUC,GAAG,CAACC,eAAJ,CAAoBxB,IAApB,CAAV;;MACAE,GAAG,CAACuB,MAAJ,GAAa;QAAA,OAAMN,OAAO,CAACjB,GAAD,CAAb;MAAA,CAAb;;MACAA,GAAG,CAACwB,OAAJ,GAAcN,MAAd;IACH,CALM,CAAP;EAMH;AA5DI,CAAT","sourceRoot":"/","sourcesContent":["let imageApis = [\n    'https://fastly.picsum.photos/id/0/5000/3333.jpg?hmac=_j6ghY5fCfSD6tvtcV74zXivkJSPIfR9B8w34XeQmvU',\n    'https://fastly.picsum.photos/id/1/5000/3333.jpg?hmac=Asv2DU3rA_5D1xSe22xZK47WEAN0wjWeFOhzd13ujW4',\n    'https://fastly.picsum.photos/id/2/5000/3333.jpg?hmac=_KDkqQVttXw_nM-RyJfLImIbafFrqLsuGO5YuHqD-qQ',\n    'https://fastly.picsum.photos/id/3/5000/3333.jpg?hmac=GDjZ2uNWE3V59PkdDaOzTOuV3tPWWxJSf4fNcxu4S2g',\n]\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        imageScollViewContent: cc.Node,\n    },\n\n    onLoad () {\n        // this.imageScollViewContent.removeAllChildren();\n\n        // this._loadImageByIndex(0)\n        this.imageScollViewContent.removeAllChildren();\n        // this.fetchImageApi(imageApis[0]);\n\n        this.getImages(0);\n    },\n\n    getImages(index) {\n        if (index == imageApis.length) return;\n        this.scheduleOnce(() => {\n            this.fetchImageApi(imageApis[index]);\n            index++;\n            this.getImages(index);\n        }, 2)\n        \n    },\n\n    async fetchImageApi(url) {\n        try {\n            const response = await fetch(url);\n            const blob = await response.blob();\n            const img = await this.createImageFromBlob(blob);\n\n            const texture = new cc.Texture2D();\n            texture.initWithElement(img);\n            texture.handleLoadedTexture();\n            const spriteFrame = new cc.SpriteFrame(texture);\n\n            let spriteNode = new cc.Node(\"ImageNode\");\n            let sprite = spriteNode.addComponent(cc.Sprite);\n            sprite.spriteFrame = spriteFrame;\n\n            spriteNode.width = 80;\n            spriteNode.height = 80;\n\n            this.imageScollViewContent.addChild(spriteNode);\n\n            cc.log(\"Ảnh đã được gán vào Sprite\");\n        } catch (err) {\n            cc.error(\"Lỗi khi tải ảnh:\", err);\n        }\n    },\n\n    createImageFromBlob(blob) {\n        return new Promise((resolve, reject) => {\n            const img = new Image();\n            img.src = URL.createObjectURL(blob);\n            img.onload = () => resolve(img);\n            img.onerror = reject;\n        });\n    }\n});"]}