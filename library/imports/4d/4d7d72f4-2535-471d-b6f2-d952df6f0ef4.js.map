{"version":3,"sources":["assets/Bai_6/Scripts/Bai_6.js"],"names":["Items","cc","Class","Component","properties","TIMEOUT","URL","onLoad","console","log","fetchDataWithTimeout","then","data","title","body","error","message","url","timeout","Promise","resolve","resject","controller","AbortController","signal","timer","setTimeout","abort","fetch","response","e","start"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,IAAMA,KAAK,GAAG,CACV,8CADU,EAEV,8CAFU,EAGV,8CAHU,EAIV,8CAJU,EAKV,8CALU,EAMV,8CANU,EAOV,8CAPU,CAAd;AAUAC,EAAE,CAACC,KAAH,CAAS;EACL,WAASD,EAAE,CAACE,SADP;EAGLC,UAAU,EAAE;IACRC,OAAO,EAAE,IADD;IAERC,GAAG,EAAE;EAFG,CAHP;EAQL;EAEAC,MAVK,oBAUI;IACLC,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBT,KAAK,CAAC,CAAD,CAAzB,EADK,CAEL;;IACA,KAAKU,oBAAL,CAA0BJ,GAA1B,EAA+BD,OAA/B,EACKM,IADL,CACU,UAAAC,IAAI,EAAI;MACVJ,OAAO,CAACC,GAAR,CAAY,eAAZ,EACMG,IADN;MAEAJ,OAAO,CAACC,GAAR,CAAY,QAAZ,EACMG,IAAI,CAACC,KADX;MAEAL,OAAO,CAACC,GAAR,CAAY,OAAZ,EACMG,IAAI,CAACE,IADX;IAEH,CARL,WASW,UAAAC,KAAK,EAAI;MACZP,OAAO,CAACO,KAAR,CAAc,QAAd,EACMA,KAAK,CAACC,OADZ;IAEH,CAZL;EAaH,CA1BI;EA6BLN,oBA7BK,gCA6BgBO,GA7BhB,EA6BqBC,OA7BrB,EA6B8B;IAC/B,OAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,OAAV,EAAsB;MACrC,IAAMC,UAAU,GAAG,IAAIC,eAAJ,EAAnB;MACA,IAAQC,MAAR,GAAmBF,UAAnB,CAAQE,MAAR;MACA,IAAMC,KAAK,GAAGC,UAAU,CAAC,YAAM;QAC3BJ,UAAU,CAACK,KAAX;QACAN,OAAO,CAAC,iBAAD,CAAP;MACH,CAHuB,EAGrBH,OAHqB,CAAxB;MAIAU,KAAK,CAACX,GAAD,EAAM;QAAEO,MAAM,EAANA;MAAF,CAAN,CAAL,CAAuBb,IAAvB,CAA4B,UAAAkB,QAAQ,EAAI;QAEpCrB,OAAO,CAACC,GAAR;MACH,CAHD,WAGS,UAAAqB,CAAC,EAAI;QACVtB,OAAO,CAACC,GAAR,mBAA4BqB,CAAC,CAACd,OAA9B;MACH,CALD;IAOH,CAdM,CAAP;EAeH,CA7CI;EAgDLe,KAhDK,mBAgDG,CAEP,CAlDI,CAoDL;;AApDK,CAAT,GAyDA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourceRoot":"/","sourcesContent":["// Learn cc.Class:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/class.html\n// Learn Attribute:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - https://docs.cocos.com/creator/2.4/manual/en/scripting/life-cycle-callbacks.html\n\nconst Items = [\n    'https://jsonplaceholder.typicode.com/posts/1',\n    'https://jsonplaceholder.typicode.com/posts/2',\n    'https://jsonplaceholder.typicode.com/posts/3',\n    'https://jsonplaceholder.typicode.com/posts/4',\n    'https://jsonplaceholder.typicode.com/posts/5',\n    'https://jsonplaceholder.typicode.com/posts/6',\n    'https://jsonplaceholder.typicode.com/posts/7',\n];\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        TIMEOUT: 5000,\n        URL: 'https://jsonplaceholder.typicode.com/posts/1',\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    onLoad() {\n        console.log('Item', Items[1])\n        // Usage example\n        this.fetchDataWithTimeout(URL, TIMEOUT)\n            .then(data => {\n                console.log('Fetched data:'\n                    , data);\n                console.log('Title:'\n                    , data.title);\n                console.log('Body:'\n                    , data.body);\n            })\n            .catch(error => {\n                console.error('Error:'\n                    , error.message);\n            });\n    },\n\n\n    fetchDataWithTimeout(url, timeout) {\n        return new Promise((resolve, resject) => {\n            const controller = new AbortController();\n            const { signal } = controller;\n            const timer = setTimeout(() => {\n                controller.abort();\n                resject('Request timeout')\n            }, timeout)\n            fetch(url, { signal }).then(response => {\n\n                console.log(`Request is complete ðŸŽ‰`);\n            }).catch(e => {\n                console.log(`Fetch error: ${e.message} ðŸ˜¯`);\n            });\n\n        })\n    },\n\n\n    start() {\n\n    },\n\n    // update (dt) {},\n});\n\n\n\n// fetchDataWithTimeout(url, timeout) {\n//     return new Promise((resolve, reject) => {\n//         const controller = new AbortController(); \n//         const signal = controller.signal;\n\n//         const timer = setTimeout(() => {\n//             controller.abort(); \n//             reject('Request timed out'); \n//         }, timeout);\n\n//         fetch(url, { signal })\n//             .then(response => {\n//                 clearTimeout(timer); \n//                 if (!response.ok) {\n//                     reject('Network response was not ok');\n//                     return;\n//                 }\n//                 return response.json();\n//             })\n//             .then(data => {\n//                 resolve(data); \n//             })\n//             .catch(err => {\n//                 if (err.name === 'AbortError') {\n//                     reject('Fetch aborted due to timeout');\n//                 } else {\n//                     reject(err); \n//                 }\n//             });\n//     });\n// },\n"]}